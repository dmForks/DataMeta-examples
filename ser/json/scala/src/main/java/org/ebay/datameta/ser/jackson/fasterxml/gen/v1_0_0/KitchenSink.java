package org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0;
import java.math.BigDecimal;
import java.time.ZonedDateTime;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

import org.ebay.datameta.dom.Verifiable;
import java.util.Objects;
import java.util.StringJoiner;
import org.ebay.datameta.dom.VerificationException;
import org.ebay.datameta.util.jdk.SemanticVersion;
import static org.ebay.datameta.dom.CannedRegexUtil.getCannedRegEx;

/**
An example of <b>everything</b> thrown at it,
All we have.

 * This class is generated by
 * <a href='https://github.com/eBayDataMeta/DataMeta'>DataMeta</a>.
 */
public class KitchenSink implements Verifiable {

    public static final SemanticVersion VERSION = SemanticVersion.parse("1.0.0");

    private static final java.util.regex.Pattern REGEX___1___ = // homeZip, workZip
        java.util.regex.Pattern.compile("^(\\d{5,5})(?:[- ](\\d{4,4}))?$");

    private static final java.util.regex.Pattern REGEX___2___ = // lastFirstName
        java.util.regex.Pattern.compile("^(\\w+),[ ]*(\\w+)");

    private Long id;
    private String context;
    private Integer fieldName;
    private Set<String> strings;
    private List<EmbeddedType> embeds;
    private LinkedList<Integer> ints;
    private Set<ZonedDateTime> times;
    private Set<IdLess> idLessNess;
    private String name;
    private String code;
    private BaseColor color;
    private WordedEnum type;
    private MultiSetString choices;
    private Integer length;
    private Integer bearing;
    private Long frequency;
    private Long amplitude;
    private Float weight;
    private Float diameter;
    private Double radius;
    private Double temperature;
    private Boolean isRequired;
    private Boolean isMeasurable;
    private String comments;
    private ZonedDateTime created;
    private ZonedDateTime altered;
    private BigDecimal salary;
    private java.net.URL homePage;
    private java.net.URL workPage;
    private String homeEmail;
    private String mobilePhone;
    private String homeZip;
    private String workZip;
    private String lastFirstName;
    private byte[] bytes;
    private EmbeddedType emb;
    private Embodiment embo;

    public void setId(final Long newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'id' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.id = newValue;
    }

    public Long getId() {return this.id; }
    public void setContext(final String newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'context' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.context = newValue;
    }

    public String getContext() {return this.context; }

    public void setFieldName(final Integer newValue) {this.fieldName = newValue; }

    public Integer getFieldName() {return this.fieldName; }
    public void setStrings(final Set<String> newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'strings' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.strings = newValue;
    }

    public Set<String> getStrings() {return this.strings; }
    public void setEmbeds(final List<EmbeddedType> newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'embeds' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.embeds = newValue;
    }

    public List<EmbeddedType> getEmbeds() {return this.embeds; }
    public void setInts(final LinkedList<Integer> newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'ints' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.ints = newValue;
    }

    public LinkedList<Integer> getInts() {return this.ints; }
    public void setTimes(final Set<ZonedDateTime> newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'times' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.times = newValue;
    }

    public Set<ZonedDateTime> getTimes() {return this.times; }
    public void setIdLessNess(final Set<IdLess> newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'idLessNess' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.idLessNess = newValue;
    }

    public Set<IdLess> getIdLessNess() {return this.idLessNess; }
    public void setName(final String newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'name' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.name = newValue;
    }
    /**
The {@link java.lang.String} type is a variable string.
     */
    public String getName() {return this.name; }
    public void setCode(final String newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'code' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.code = newValue;
    }
    /**
The char type is fixed string
     */
    public String getCode() {return this.code; }

    public void setColor(final BaseColor newValue) {this.color = newValue; }

    public BaseColor getColor() {return this.color; }
    public void setType(final WordedEnum newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'type' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.type = newValue;
    }

    public WordedEnum getType() {return this.type; }

    public void setChoices(final MultiSetString newValue) {this.choices = newValue; }

    public MultiSetString getChoices() {return this.choices; }
    public void setLength(final Integer newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'length' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.length = newValue;
    }

    public Integer getLength() {return this.length; }

    public void setBearing(final Integer newValue) {this.bearing = newValue; }

    public Integer getBearing() {return this.bearing; }
    public void setFrequency(final Long newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'frequency' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.frequency = newValue;
    }

    public Long getFrequency() {return this.frequency; }

    public void setAmplitude(final Long newValue) {this.amplitude = newValue; }

    public Long getAmplitude() {return this.amplitude; }
    public void setWeight(final Float newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'weight' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.weight = newValue;
    }

    public Float getWeight() {return this.weight; }

    public void setDiameter(final Float newValue) {this.diameter = newValue; }

    public Float getDiameter() {return this.diameter; }

    public void setRadius(final Double newValue) {this.radius = newValue; }

    public Double getRadius() {return this.radius; }
    public void setTemperature(final Double newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'temperature' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.temperature = newValue;
    }

    public Double getTemperature() {return this.temperature; }
    public void setIsRequired(final Boolean newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'isRequired' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.isRequired = newValue;
    }

    public Boolean getIsRequired() {return this.isRequired; }

    public void setIsMeasurable(final Boolean newValue) {this.isMeasurable = newValue; }

    public Boolean getIsMeasurable() {return this.isMeasurable; }
    public void setComments(final String newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'comments' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.comments = newValue;
    }

    public String getComments() {return this.comments; }

    public void setCreated(final ZonedDateTime newValue) {this.created = newValue; }

    public ZonedDateTime getCreated() {return this.created; }

    public void setAltered(final ZonedDateTime newValue) {this.altered = newValue; }

    public ZonedDateTime getAltered() {return this.altered; }

    public void setSalary(final BigDecimal newValue) {this.salary = newValue; }

    public BigDecimal getSalary() {return this.salary; }
    public void setHomePage(final java.net.URL newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'homePage' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.homePage = newValue;
    }

    public java.net.URL getHomePage() {return this.homePage; }
    public void setWorkPage(final java.net.URL newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'workPage' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.workPage = newValue;
    }

    public java.net.URL getWorkPage() {return this.workPage; }
    public void setHomeEmail(final String newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'homeEmail' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.homeEmail = newValue;
    }

    public String getHomeEmail() {return this.homeEmail; }

    public void setMobilePhone(final String newValue) {this.mobilePhone = newValue; }

    public String getMobilePhone() {return this.mobilePhone; }
    public void setHomeZip(final String newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'homeZip' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.homeZip = newValue;
    }

    public String getHomeZip() {return this.homeZip; }
    public void setWorkZip(final String newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'workZip' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.workZip = newValue;
    }

    public String getWorkZip() {return this.workZip; }

    public void setLastFirstName(final String newValue) {this.lastFirstName = newValue; }

    public String getLastFirstName() {return this.lastFirstName; }
    public void setBytes(final byte[] newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'bytes' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.bytes = newValue;
    }

    public byte[] getBytes() {return this.bytes; }

    public void setEmb(final EmbeddedType newValue) {this.emb = newValue; }
    /**
Reference to another object
it's up to the concrete parser how it would interpret it
the parser enforces the requirement that
the target object has to have single-field identity
which field's type becomes this field's type
if the parser decides to point to the instance (like a foreign key) in SQL
or embedding it
     */
    public EmbeddedType getEmb() {return this.emb; }
    public void setEmbo(final Embodiment newValue) {
        if(newValue == null) throw new IllegalArgumentException(
                "NULL passed to the setter of the required field 'embo' on the class org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0.KitchenSink.");
        this.embo = newValue;
    }

    public Embodiment getEmbo() {return this.embo; }

    /**
    * If there is class type mismatch, somehow we are comparing apples to oranges, this is an error, not
    * a not-equal condition.
    */
    @SuppressWarnings("EqualsWhichDoesntCheckParameterClass") @Override public boolean equals(Object other) {
        return Objects.deepEquals(new Object[]{this.id, this.temperature},
          new Object[]{((KitchenSink) other).id, ((KitchenSink) other).temperature});
    }

    @Override public int hashCode() {// null - safe: result = 31 * result + (element == null ? 0 : element.hashCode());
        return Objects.hash(this.id, this.temperature);
    }

    public void verify() {

        StringJoiner missingFields = new StringJoiner(", ");
        if(id == null) missingFields.add("id");
        if(context == null) missingFields.add("context");
        if(strings == null) missingFields.add("strings");
        if(embeds == null) missingFields.add("embeds");
        if(ints == null) missingFields.add("ints");
        if(times == null) missingFields.add("times");
        if(idLessNess == null) missingFields.add("idLessNess");
        if(name == null) missingFields.add("name");
        if(code == null) missingFields.add("code");
        if(type == null) missingFields.add("type");
        if(length == null) missingFields.add("length");
        if(frequency == null) missingFields.add("frequency");
        if(weight == null) missingFields.add("weight");
        if(temperature == null) missingFields.add("temperature");
        if(isRequired == null) missingFields.add("isRequired");
        if(comments == null) missingFields.add("comments");
        if(homePage == null) missingFields.add("homePage");
        if(workPage == null) missingFields.add("workPage");
        if(homeEmail == null) missingFields.add("homeEmail");
        if(homeZip == null) missingFields.add("homeZip");
        if(workZip == null) missingFields.add("workZip");
        if(bytes == null) missingFields.add("bytes");
        if(embo == null) missingFields.add("embo");
        if(missingFields.length() != 0) throw new VerificationException(getClass().getSimpleName() + ": required fields not set: " + missingFields);


        if(!getCannedRegEx("email").matcher(homeEmail).matches())
            throw new VerificationException("Variable \"homeEmail\" == {{" + homeEmail + "}} didn't match canned expression \"email\"" );
        if(mobilePhone != null && !getCannedRegEx("phone").matcher(mobilePhone).matches())
            throw new VerificationException("Variable \"mobilePhone\" == {{" + mobilePhone + "}} didn't match canned expression \"phone\"" );
        if(!REGEX___1___.matcher(homeZip).matches())
            throw new VerificationException("Variable \"homeZip\" == {{" + homeZip + "}} didn't match custom expression {{" + REGEX___1___ + "}}");
        if(!REGEX___1___.matcher(workZip).matches())
            throw new VerificationException("Variable \"workZip\" == {{" + workZip + "}} didn't match custom expression {{" + REGEX___1___ + "}}");
        if(lastFirstName != null && !REGEX___2___.matcher(lastFirstName).matches())
            throw new VerificationException("Variable \"lastFirstName\" == {{" + lastFirstName + "}} didn't match custom expression {{" + REGEX___2___ + "}}");
        embeds.forEach(Verifiable::verify);
        idLessNess.forEach(Verifiable::verify);
        if(emb != null) emb.verify();
        embo.verify();

    }

    public final SemanticVersion getVersion() { return VERSION; }
}
