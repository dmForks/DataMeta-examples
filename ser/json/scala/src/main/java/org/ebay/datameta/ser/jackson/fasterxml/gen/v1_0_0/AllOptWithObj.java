package org.ebay.datameta.ser.jackson.fasterxml.gen.v1_0_0;


import org.ebay.datameta.dom.Verifiable;
import java.util.Objects;
import java.util.StringJoiner;
import org.ebay.datameta.dom.VerificationException;
import org.ebay.datameta.util.jdk.SemanticVersion;
import static org.ebay.datameta.dom.CannedRegexUtil.getCannedRegEx;

/**

 * This class is generated by
 * <a href='https://github.com/eBayDataMeta/DataMeta'>DataMeta</a>.
 */
public class AllOptWithObj implements Verifiable {

    public static final SemanticVersion VERSION = SemanticVersion.parse("1.0.0");



    private Integer counter;
    private AllOptional allOpt;


    public void setCounter(final Integer newValue) {this.counter = newValue; }

    public Integer getCounter() {return this.counter; }

    public void setAllOpt(final AllOptional newValue) {this.allOpt = newValue; }

    public AllOptional getAllOpt() {return this.allOpt; }

    /**
    * If there is class type mismatch, somehow we are comparing apples to oranges, this is an error, not
    * a not-equal condition.
    */
    @SuppressWarnings("EqualsWhichDoesntCheckParameterClass") @Override public boolean equals(Object other) {
        return Objects.deepEquals(new Object[]{this.allOpt, this.counter},
          new Object[]{((AllOptWithObj) other).allOpt, ((AllOptWithObj) other).counter});
    }

    @Override public int hashCode() {// null - safe: result = 31 * result + (element == null ? 0 : element.hashCode());
        return Objects.hash(this.allOpt, this.counter);
    }

    public void verify() {



        if(allOpt != null) allOpt.verify();

    }

    public final SemanticVersion getVersion() { return VERSION; }
}
